@page "/random"

@inject HttpClient Http

<div class="text-center">
    
        <h1>Random</h1>
        
        <a href="random">
            <button class="btn btn-success shadow" @onclick="OnInitializedAsync">
                <span class="oi oi-reload"></span>
            </button>
        </a>
    
    
</div>


@if (alldata != null)

{
    <div class="row mx-4 mx-lg-5 ">
        @foreach (Entry item in alldata.entries)
        {


            <div class="card h-100 col-sm-12 col-lg-12 col-12 shadow-sm m-3">
                <div class="card-body">
                    <h2 class="card-title">
                        @item.API
                    </h2>
                    <h3 class="text-muted">
                        @item.Category
                    </h3>
                    <p class="card-text">
                        @item.Description
                    </p>

                    <hr />

                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-bold">HTTPS:</p>
                        </div>



                        <div class="col-sm-4">
                            @if (item.HTTPS == true)
                            {
                                <span class="oi oi-check"></span>
                            }
                            @if (item.HTTPS == false)
                            {
                                <span class="oi oi-x"></span>
                            }
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-bold">CORS:</p>
                        </div>



                        <div class="col-sm-4">
                            @if (item.Cors == "yes")
                            {
                                <span class="oi oi-check"></span>
                            }
                            @if (item.Cors == "no")
                            {
                                <span class="oi oi-x"></span>
                            }
                            @if (item.Cors == "unknown")
                            {
                                <span class="oi oi-question-mark"></span>
                            }
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col-sm-8">
                            <p class="font-weight-bold">Authorisation:</p>
                        </div>



                        <div class="col-sm-4">
                            @if (item.Auth == "apiKey")
                            {
                                <p>API Key</p>
                            }
                            @if (item.Auth == "OAuth")
                            {
                                <p>OAuth</p>
                            }
                            @if (item.Auth == "")
                            {
                                <p>None</p>
                            }
                        </div>
                    </div>


                    <a href=@item.Link target="_blank">
                        <button class="btn btn-success">

                            View
                        </button>
                    </a>
                </div>

            </div>


            <div class="col-lg-1"></div>
        }
    </div>


}


@code {
    private Root alldata;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            alldata = await Http.GetFromJsonAsync<Root>("https://api.publicapis.org/random");
            Console.WriteLine(alldata.count);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }


    }

    public class Entry
    {
        public string API { get; set; }
        public string Description { get; set; }
        public string Auth { get; set; }
        public bool HTTPS { get; set; }
        public string Cors { get; set; }
        public string Link { get; set; }
        public string Category { get; set; }
    }

    public class Root
    {
        public int count { get; set; }
        public List<Entry> entries { get; set; }
    }
}
